"use client"
import Head from "next/head";
import { useState } from "react";
import React from "react";
import { SubmitHandler, useForm } from "react-hook-form";
import * as yup from "yup";
import { yupResolver } from "@hookform/resolvers/yup";
// import Home from './Home'
import { Auth } from "../utils/utils";
import { useRouter } from "next/router";
import Homecomp from "./Homecomp";
export type returntype={
  username: string; password: string;
}
export default function Home() {
  const schema = yup.object().shape({
    username: yup.string()
                .min(4, "Mininum 4 characters")
                .max(15, "Maximum 15 characters")
                .required("You must enter a username"),
    password: yup
      .string()
      .min(4, "password must be more than 4 characters")
      .max(32, "password must be less than 32 characters")
      .required("password is valid"),
  });
  // const router=useRouter()
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<returntype>({
    resolver: yupResolver(schema),
  });
  type dataType={
    dob:string,
      gender:string,
      location:string,
      role:string,
      response:string
  }
  const dataValue={
    dob:"",
      gender:"",
      location:"",
      role:"",
      response:""
  }
  const [resulttitle, setResulttitle] = useState('');
  const [data, setData] = useState<dataType>(dataValue);
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  
  const Submit: SubmitHandler<returntype> =async (data) => 

  { console.log(errors);
  
    await new Promise((resolve)=>{Auth(data)
    .then((r)=>
    {
    resolve('ok')
    if(r.response)
    {
      setData(r)
      setResulttitle(r.role)
      // router.push(`./a`)
    }else{
      setPassword('')
      setUsername('')
    }
    return r
  })})
    
}


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        
        
            {(resulttitle && <Homecomp persondata={data} getdata={resulttitle} setgetdata={setResulttitle}/>) || <div
          style={{
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            width: "100vw",
            height: "100vh",
          }}
        >
          <div style={{ width: 400, height: 400 }}>
            <form onSubmit={handleSubmit(Submit)}>
              <h1 className="h3 mb-3 fw-normal">Please sign in</h1>

              <div className="form-floating">
                <input
                  type="text"
                  className="form-control"
                  value={username}
                  {...register("username")}
                  onChange={(e) => setUsername(e.target.value)}
                  id="floatingInput"
                  placeholder="abcxyz"
                />
                <label htmlFor="floatingInput">Username</label>
                {errors.username?.message && (
                  <p style={{ color: "red" }}>{errors.username?.message}</p>
                )}
              </div>
              <div className="form-floating">
                <input
                  type="password"
                  className="form-control"
                  value={password}
                  {...register("password")}
                  onChange={(e) => setPassword(e.target.value)}
                  id="floatingPassword"
                  placeholder="Password"
                />
                <label htmlFor="floatingPassword">Password</label>
                {errors.password?.message && (
                  <p style={{ color: "red" }}>{ errors.password?.message || "password is incorrect"}</p>
                )}
              </div>

              <div className="form-check text-start my-3"></div>
              <button className="btn btn-primary w-100 py-2" type="submit">
                Sign in
              </button>
            </form>
          </div>
        </div>}
        
      </main>
    </>
  );
}
